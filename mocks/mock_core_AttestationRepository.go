// Code generated by mockery v2.53.0. DO NOT EDIT.

package mocks

import (
	uuid "github.com/google/uuid"
	models "github.com/l3montree-dev/devguard/internal/database/models"
	mock "github.com/stretchr/testify/mock"
)

// CoreAttestationRepository is an autogenerated mock type for the AttestationRepository type
type CoreAttestationRepository struct {
	mock.Mock
}

type CoreAttestationRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *CoreAttestationRepository) EXPECT() *CoreAttestationRepository_Expecter {
	return &CoreAttestationRepository_Expecter{mock: &_m.Mock}
}

// GetByAssetID provides a mock function with given fields: assetID
func (_m *CoreAttestationRepository) GetByAssetID(assetID uuid.UUID) ([]models.Attestation, error) {
	ret := _m.Called(assetID)

	if len(ret) == 0 {
		panic("no return value specified for GetByAssetID")
	}

	var r0 []models.Attestation
	var r1 error
	if rf, ok := ret.Get(0).(func(uuid.UUID) ([]models.Attestation, error)); ok {
		return rf(assetID)
	}
	if rf, ok := ret.Get(0).(func(uuid.UUID) []models.Attestation); ok {
		r0 = rf(assetID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Attestation)
		}
	}

	if rf, ok := ret.Get(1).(func(uuid.UUID) error); ok {
		r1 = rf(assetID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CoreAttestationRepository_GetByAssetID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetByAssetID'
type CoreAttestationRepository_GetByAssetID_Call struct {
	*mock.Call
}

// GetByAssetID is a helper method to define mock.On call
//   - assetID uuid.UUID
func (_e *CoreAttestationRepository_Expecter) GetByAssetID(assetID interface{}) *CoreAttestationRepository_GetByAssetID_Call {
	return &CoreAttestationRepository_GetByAssetID_Call{Call: _e.mock.On("GetByAssetID", assetID)}
}

func (_c *CoreAttestationRepository_GetByAssetID_Call) Run(run func(assetID uuid.UUID)) *CoreAttestationRepository_GetByAssetID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uuid.UUID))
	})
	return _c
}

func (_c *CoreAttestationRepository_GetByAssetID_Call) Return(_a0 []models.Attestation, _a1 error) *CoreAttestationRepository_GetByAssetID_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *CoreAttestationRepository_GetByAssetID_Call) RunAndReturn(run func(uuid.UUID) ([]models.Attestation, error)) *CoreAttestationRepository_GetByAssetID_Call {
	_c.Call.Return(run)
	return _c
}

// NewCoreAttestationRepository creates a new instance of CoreAttestationRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCoreAttestationRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *CoreAttestationRepository {
	mock := &CoreAttestationRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
