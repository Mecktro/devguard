// Code generated by mockery v2.46.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// IntotoInTotoVerifierService is an autogenerated mock type for the inTotoVerifierService type
type IntotoInTotoVerifierService struct {
	mock.Mock
}

type IntotoInTotoVerifierService_Expecter struct {
	mock *mock.Mock
}

func (_m *IntotoInTotoVerifierService) EXPECT() *IntotoInTotoVerifierService_Expecter {
	return &IntotoInTotoVerifierService_Expecter{mock: &_m.Mock}
}

// VerifyWithImageName provides a mock function with given fields: imageName, digest
func (_m *IntotoInTotoVerifierService) VerifyWithImageName(imageName string, digest string) error {
	ret := _m.Called(imageName, digest)

	if len(ret) == 0 {
		panic("no return value specified for VerifyWithImageName")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(imageName, digest)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// IntotoInTotoVerifierService_VerifyWithImageName_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'VerifyWithImageName'
type IntotoInTotoVerifierService_VerifyWithImageName_Call struct {
	*mock.Call
}

// VerifyWithImageName is a helper method to define mock.On call
//   - imageName string
//   - digest string
func (_e *IntotoInTotoVerifierService_Expecter) VerifyWithImageName(imageName interface{}, digest interface{}) *IntotoInTotoVerifierService_VerifyWithImageName_Call {
	return &IntotoInTotoVerifierService_VerifyWithImageName_Call{Call: _e.mock.On("VerifyWithImageName", imageName, digest)}
}

func (_c *IntotoInTotoVerifierService_VerifyWithImageName_Call) Run(run func(imageName string, digest string)) *IntotoInTotoVerifierService_VerifyWithImageName_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string))
	})
	return _c
}

func (_c *IntotoInTotoVerifierService_VerifyWithImageName_Call) Return(_a0 error) *IntotoInTotoVerifierService_VerifyWithImageName_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *IntotoInTotoVerifierService_VerifyWithImageName_Call) RunAndReturn(run func(string, string) error) *IntotoInTotoVerifierService_VerifyWithImageName_Call {
	_c.Call.Return(run)
	return _c
}

// VerifyWithSupplyChainID provides a mock function with given fields: supplyChainID
func (_m *IntotoInTotoVerifierService) VerifyWithSupplyChainID(supplyChainID string) error {
	ret := _m.Called(supplyChainID)

	if len(ret) == 0 {
		panic("no return value specified for VerifyWithSupplyChainID")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(supplyChainID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// IntotoInTotoVerifierService_VerifyWithSupplyChainID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'VerifyWithSupplyChainID'
type IntotoInTotoVerifierService_VerifyWithSupplyChainID_Call struct {
	*mock.Call
}

// VerifyWithSupplyChainID is a helper method to define mock.On call
//   - supplyChainID string
func (_e *IntotoInTotoVerifierService_Expecter) VerifyWithSupplyChainID(supplyChainID interface{}) *IntotoInTotoVerifierService_VerifyWithSupplyChainID_Call {
	return &IntotoInTotoVerifierService_VerifyWithSupplyChainID_Call{Call: _e.mock.On("VerifyWithSupplyChainID", supplyChainID)}
}

func (_c *IntotoInTotoVerifierService_VerifyWithSupplyChainID_Call) Run(run func(supplyChainID string)) *IntotoInTotoVerifierService_VerifyWithSupplyChainID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *IntotoInTotoVerifierService_VerifyWithSupplyChainID_Call) Return(_a0 error) *IntotoInTotoVerifierService_VerifyWithSupplyChainID_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *IntotoInTotoVerifierService_VerifyWithSupplyChainID_Call) RunAndReturn(run func(string) error) *IntotoInTotoVerifierService_VerifyWithSupplyChainID_Call {
	_c.Call.Return(run)
	return _c
}

// NewIntotoInTotoVerifierService creates a new instance of IntotoInTotoVerifierService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIntotoInTotoVerifierService(t interface {
	mock.TestingT
	Cleanup(func())
}) *IntotoInTotoVerifierService {
	mock := &IntotoInTotoVerifierService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
