// Code generated by mockery v2.52.2. DO NOT EDIT.

package mocks

import (
	models "github.com/l3montree-dev/devguard/internal/database/models"
	mock "github.com/stretchr/testify/mock"
	gorm "gorm.io/gorm"
)

// DependencyVulnCtrVulnEventRepository is an autogenerated mock type for the ctrVulnEventRepository type
type DependencyVulnCtrVulnEventRepository struct {
	mock.Mock
}

type DependencyVulnCtrVulnEventRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *DependencyVulnCtrVulnEventRepository) EXPECT() *DependencyVulnCtrVulnEventRepository_Expecter {
	return &DependencyVulnCtrVulnEventRepository_Expecter{mock: &_m.Mock}
}

// Create provides a mock function with given fields: tx, VulnEvent
func (_m *DependencyVulnCtrVulnEventRepository) Create(tx *gorm.DB, VulnEvent *models.VulnEvent) error {
	ret := _m.Called(tx, VulnEvent)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*gorm.DB, *models.VulnEvent) error); ok {
		r0 = rf(tx, VulnEvent)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DependencyVulnCtrVulnEventRepository_Create_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Create'
type DependencyVulnCtrVulnEventRepository_Create_Call struct {
	*mock.Call
}

// Create is a helper method to define mock.On call
//   - tx *gorm.DB
//   - VulnEvent *models.VulnEvent
func (_e *DependencyVulnCtrVulnEventRepository_Expecter) Create(tx interface{}, VulnEvent interface{}) *DependencyVulnCtrVulnEventRepository_Create_Call {
	return &DependencyVulnCtrVulnEventRepository_Create_Call{Call: _e.mock.On("Create", tx, VulnEvent)}
}

func (_c *DependencyVulnCtrVulnEventRepository_Create_Call) Run(run func(tx *gorm.DB, VulnEvent *models.VulnEvent)) *DependencyVulnCtrVulnEventRepository_Create_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gorm.DB), args[1].(*models.VulnEvent))
	})
	return _c
}

func (_c *DependencyVulnCtrVulnEventRepository_Create_Call) Return(_a0 error) *DependencyVulnCtrVulnEventRepository_Create_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *DependencyVulnCtrVulnEventRepository_Create_Call) RunAndReturn(run func(*gorm.DB, *models.VulnEvent) error) *DependencyVulnCtrVulnEventRepository_Create_Call {
	_c.Call.Return(run)
	return _c
}

// NewDependencyVulnCtrVulnEventRepository creates a new instance of DependencyVulnCtrVulnEventRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDependencyVulnCtrVulnEventRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *DependencyVulnCtrVulnEventRepository {
	mock := &DependencyVulnCtrVulnEventRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
