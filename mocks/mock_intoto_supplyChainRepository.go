// Code generated by mockery v2.46.2. DO NOT EDIT.

package mocks

import (
	core "github.com/l3montree-dev/devguard/internal/core"

	mock "github.com/stretchr/testify/mock"

	models "github.com/l3montree-dev/devguard/internal/database/models"
)

// IntotoSupplyChainRepository is an autogenerated mock type for the supplyChainRepository type
type IntotoSupplyChainRepository struct {
	mock.Mock
}

type IntotoSupplyChainRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *IntotoSupplyChainRepository) EXPECT() *IntotoSupplyChainRepository_Expecter {
	return &IntotoSupplyChainRepository_Expecter{mock: &_m.Mock}
}

// Save provides a mock function with given fields: tx, model
func (_m *IntotoSupplyChainRepository) Save(tx core.DB, model *models.SupplyChain) error {
	ret := _m.Called(tx, model)

	if len(ret) == 0 {
		panic("no return value specified for Save")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(core.DB, *models.SupplyChain) error); ok {
		r0 = rf(tx, model)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// IntotoSupplyChainRepository_Save_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Save'
type IntotoSupplyChainRepository_Save_Call struct {
	*mock.Call
}

// Save is a helper method to define mock.On call
//   - tx core.DB
//   - model *models.SupplyChain
func (_e *IntotoSupplyChainRepository_Expecter) Save(tx interface{}, model interface{}) *IntotoSupplyChainRepository_Save_Call {
	return &IntotoSupplyChainRepository_Save_Call{Call: _e.mock.On("Save", tx, model)}
}

func (_c *IntotoSupplyChainRepository_Save_Call) Run(run func(tx core.DB, model *models.SupplyChain)) *IntotoSupplyChainRepository_Save_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(core.DB), args[1].(*models.SupplyChain))
	})
	return _c
}

func (_c *IntotoSupplyChainRepository_Save_Call) Return(_a0 error) *IntotoSupplyChainRepository_Save_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *IntotoSupplyChainRepository_Save_Call) RunAndReturn(run func(core.DB, *models.SupplyChain) error) *IntotoSupplyChainRepository_Save_Call {
	_c.Call.Return(run)
	return _c
}

// NewIntotoSupplyChainRepository creates a new instance of IntotoSupplyChainRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIntotoSupplyChainRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *IntotoSupplyChainRepository {
	mock := &IntotoSupplyChainRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
