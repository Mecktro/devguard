// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import (
	flaw "github.com/l3montree-dev/flawfix/internal/core/flaw"
	mock "github.com/stretchr/testify/mock"
)

// FlawEnricher is an autogenerated mock type for the Enricher type
type FlawEnricher struct {
	mock.Mock
}

type FlawEnricher_Expecter struct {
	mock *mock.Mock
}

func (_m *FlawEnricher) EXPECT() *FlawEnricher_Expecter {
	return &FlawEnricher_Expecter{mock: &_m.Mock}
}

// AsyncEnrich provides a mock function with given fields: _a0
func (_m *FlawEnricher) AsyncEnrich(_a0 []flaw.Model) {
	_m.Called(_a0)
}

// FlawEnricher_AsyncEnrich_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AsyncEnrich'
type FlawEnricher_AsyncEnrich_Call struct {
	*mock.Call
}

// AsyncEnrich is a helper method to define mock.On call
//   - _a0 []flaw.Model
func (_e *FlawEnricher_Expecter) AsyncEnrich(_a0 interface{}) *FlawEnricher_AsyncEnrich_Call {
	return &FlawEnricher_AsyncEnrich_Call{Call: _e.mock.On("AsyncEnrich", _a0)}
}

func (_c *FlawEnricher_AsyncEnrich_Call) Run(run func(_a0 []flaw.Model)) *FlawEnricher_AsyncEnrich_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]flaw.Model))
	})
	return _c
}

func (_c *FlawEnricher_AsyncEnrich_Call) Return() *FlawEnricher_AsyncEnrich_Call {
	_c.Call.Return()
	return _c
}

func (_c *FlawEnricher_AsyncEnrich_Call) RunAndReturn(run func([]flaw.Model)) *FlawEnricher_AsyncEnrich_Call {
	_c.Call.Return(run)
	return _c
}

// NewFlawEnricher creates a new instance of FlawEnricher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewFlawEnricher(t interface {
	mock.TestingT
	Cleanup(func())
}) *FlawEnricher {
	mock := &FlawEnricher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
