// Code generated by mockery v2.50.1. DO NOT EDIT.

package mocks

import (
	uuid "github.com/google/uuid"
	mock "github.com/stretchr/testify/mock"
)

// AssetSupplyChainRepository is an autogenerated mock type for the supplyChainRepository type
type AssetSupplyChainRepository struct {
	mock.Mock
}

type AssetSupplyChainRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *AssetSupplyChainRepository) EXPECT() *AssetSupplyChainRepository_Expecter {
	return &AssetSupplyChainRepository_Expecter{mock: &_m.Mock}
}

// PercentageOfVerifiedSupplyChains provides a mock function with given fields: assetID
func (_m *AssetSupplyChainRepository) PercentageOfVerifiedSupplyChains(assetID uuid.UUID) (float64, error) {
	ret := _m.Called(assetID)

	if len(ret) == 0 {
		panic("no return value specified for PercentageOfVerifiedSupplyChains")
	}

	var r0 float64
	var r1 error
	if rf, ok := ret.Get(0).(func(uuid.UUID) (float64, error)); ok {
		return rf(assetID)
	}
	if rf, ok := ret.Get(0).(func(uuid.UUID) float64); ok {
		r0 = rf(assetID)
	} else {
		r0 = ret.Get(0).(float64)
	}

	if rf, ok := ret.Get(1).(func(uuid.UUID) error); ok {
		r1 = rf(assetID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// AssetSupplyChainRepository_PercentageOfVerifiedSupplyChains_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'PercentageOfVerifiedSupplyChains'
type AssetSupplyChainRepository_PercentageOfVerifiedSupplyChains_Call struct {
	*mock.Call
}

// PercentageOfVerifiedSupplyChains is a helper method to define mock.On call
//   - assetID uuid.UUID
func (_e *AssetSupplyChainRepository_Expecter) PercentageOfVerifiedSupplyChains(assetID interface{}) *AssetSupplyChainRepository_PercentageOfVerifiedSupplyChains_Call {
	return &AssetSupplyChainRepository_PercentageOfVerifiedSupplyChains_Call{Call: _e.mock.On("PercentageOfVerifiedSupplyChains", assetID)}
}

func (_c *AssetSupplyChainRepository_PercentageOfVerifiedSupplyChains_Call) Run(run func(assetID uuid.UUID)) *AssetSupplyChainRepository_PercentageOfVerifiedSupplyChains_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uuid.UUID))
	})
	return _c
}

func (_c *AssetSupplyChainRepository_PercentageOfVerifiedSupplyChains_Call) Return(_a0 float64, _a1 error) *AssetSupplyChainRepository_PercentageOfVerifiedSupplyChains_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *AssetSupplyChainRepository_PercentageOfVerifiedSupplyChains_Call) RunAndReturn(run func(uuid.UUID) (float64, error)) *AssetSupplyChainRepository_PercentageOfVerifiedSupplyChains_Call {
	_c.Call.Return(run)
	return _c
}

// NewAssetSupplyChainRepository creates a new instance of AssetSupplyChainRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAssetSupplyChainRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *AssetSupplyChainRepository {
	mock := &AssetSupplyChainRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
