// Code generated by mockery v2.52.2. DO NOT EDIT.

package mocks

import (
	models "github.com/l3montree-dev/devguard/internal/database/models"
	mock "github.com/stretchr/testify/mock"
)

// DependencyVulnAssetRepository is an autogenerated mock type for the assetRepository type
type DependencyVulnAssetRepository struct {
	mock.Mock
}

type DependencyVulnAssetRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *DependencyVulnAssetRepository) EXPECT() *DependencyVulnAssetRepository_Expecter {
	return &DependencyVulnAssetRepository_Expecter{mock: &_m.Mock}
}

// GetAllAssetsFromDB provides a mock function with no fields
func (_m *DependencyVulnAssetRepository) GetAllAssetsFromDB() ([]models.Asset, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetAllAssetsFromDB")
	}

	var r0 []models.Asset
	var r1 error
	if rf, ok := ret.Get(0).(func() ([]models.Asset, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() []models.Asset); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Asset)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DependencyVulnAssetRepository_GetAllAssetsFromDB_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAllAssetsFromDB'
type DependencyVulnAssetRepository_GetAllAssetsFromDB_Call struct {
	*mock.Call
}

// GetAllAssetsFromDB is a helper method to define mock.On call
func (_e *DependencyVulnAssetRepository_Expecter) GetAllAssetsFromDB() *DependencyVulnAssetRepository_GetAllAssetsFromDB_Call {
	return &DependencyVulnAssetRepository_GetAllAssetsFromDB_Call{Call: _e.mock.On("GetAllAssetsFromDB")}
}

func (_c *DependencyVulnAssetRepository_GetAllAssetsFromDB_Call) Run(run func()) *DependencyVulnAssetRepository_GetAllAssetsFromDB_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *DependencyVulnAssetRepository_GetAllAssetsFromDB_Call) Return(_a0 []models.Asset, _a1 error) *DependencyVulnAssetRepository_GetAllAssetsFromDB_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *DependencyVulnAssetRepository_GetAllAssetsFromDB_Call) RunAndReturn(run func() ([]models.Asset, error)) *DependencyVulnAssetRepository_GetAllAssetsFromDB_Call {
	_c.Call.Return(run)
	return _c
}

// NewDependencyVulnAssetRepository creates a new instance of DependencyVulnAssetRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDependencyVulnAssetRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *DependencyVulnAssetRepository {
	mock := &DependencyVulnAssetRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
