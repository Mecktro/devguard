apiVersion: apps/v1
kind: Deployment
metadata:
  name: kratos
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kratos
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kratos
    spec:
      initContainers:
      - args:
        - -c
        - /etc/config/kratos/kratos.yml
        - migrate
        - sql
        - -e
        - --yes
        env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kratos-db-secret
              key: password
        - name: DSN
          value: postgres://kratos:$(DB_PASSWORD)@postgresql:5432/kratos?sslmode=disable
        image: oryd/kratos:v1.0.0
        name: kratos-migrate
        volumeMounts:
        - mountPath: /etc/config/kratos
          name: kratos-config
      containers:
      - args:
        - serve
        - -c
        - /etc/config/kratos/kratos.yml
        - --dev
        - --watch-courier
        env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kratos-db-secret
              key: password
        - name: DSN
          value: postgres://kratos:$(DB_PASSWORD)@postgresql:5432/kratos?sslmode=disable
        - name: LOG_LEVEL
          value: trace
        image: oryd/kratos:v1.0.0
        name: kratos
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 4433
          hostPort: 4433
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/config/kratos
          name: kratos-config
      restartPolicy: Always
      volumes:
      - name: kratos-config
        configMap:
          name: kratos-config

